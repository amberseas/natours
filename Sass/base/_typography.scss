body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
  
    backface-visibility: hidden; /*determines if the back part of the element when we transform it
                                  is visible or hidden for the user. Also fixs a little shaking 
                                  in the animation. no one knows why the shaking happens, but 
                                  this fixes it. */
  
    margin-bottom: 6rem;
  
    &--main {         /*'&' means '.heading-primary'*/
      display: block;
      font-size: 6rem;
      font-weight: 400;
      letter-spacing: 3.5rem;
      margin-right: -3.5rem;  /* because the added letter-spacing property also adds space AFTER the 
                                last letter */
      animation-name: moveInLeft;
      animation-duration: 1s;
      animation-timing-function: ease-out;

      @include respond(phone) {
        letter-spacing: 1rem;
        font-size: 5rem;
      }
    }
  
    &--sub {          /*'&' means '.heading-primary'*/
      display: block;
      font-size: 2rem;
      font-weight: 700;
      letter-spacing: 1.75rem;
      margin-right: -1.75rem;    /* because the added letter-spacing property also adds space AFTER 
                                    the last letter */
      animation: moveInRight 1s ease-out;

      @include respond(phone) {
        letter-spacing: 0.5rem;
      }
    }
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;

  /* GRADIENT TEXT
  So the trick is to first set the background of the entire h2 to a gradient. The next step in making that effect 
  happen with the gradient behind the text. We use the brand new webkit background-clip property, and it's so new
  that we actually have to use webkit prefix, so -webkit-background-clip. We set this property to text. And so 
  what happens now is that the background gets clipped exactly where the text sits, and so therefore this background 
  image or this gradient will only be visible where the text is. Now what we want to see then is to not actually 
  the text, but the background image, so let's make the text transparent so that we can see the background image,
  So what we can do is very simply set the color to transparent.*/

  background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s;

  @include respond(tab-port) {
    font-size: 3rem;
  }

  @include respond(phone) {
    font-size: 2.5rem;
  }

  &:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: .5rem 1rem 2rem rgba($color-black, .2);
  }
}

.heading-tertiary {
  font-size: $default-font-size;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: $default-font-size;

  &:not(:last-child){
    margin-bottom: 3rem;
  }
}